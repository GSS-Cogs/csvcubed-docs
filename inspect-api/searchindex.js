Search.setIndex({"docnames": ["csvcubed", "csvcubed.cli", "csvcubed.cli.inspectcsvw", "csvcubed.utils", "csvcubed.utils.sparql_handler", "index", "modules"], "filenames": ["csvcubed.rst", "csvcubed.cli.rst", "csvcubed.cli.inspectcsvw.rst", "csvcubed.utils.rst", "csvcubed.utils.sparql_handler.rst", "index.rst", "modules.rst"], "titles": ["csvcubed package", "csvcubed.cli package", "csvcubed.cli.inspectcsvw package", "csvcubed.utils package", "csvcubed.utils.sparql_handler package", "Welcome to csvcubed\u2019s documentation!", "csvcubed"], "terms": {"cli": [0, 5, 6], "inspectcsvw": [0, 1, 5], "inspect": [0, 1, 4], "inspectdatasetmanag": [0, 1, 3], "metadatainputvalid": [0, 1], "metadataprint": [0, 1], "entrypoint": [0, 6], "error_map": [0, 6], "friendly_error_map": [0, 1], "util": [0, 5, 6], "sparql_handl": [0, 3, 5], "code_list_inspector": [0, 3], "column_component_info": [0, 3], "csvw_inspector": [0, 3], "data_cube_inspector": [0, 3], "sparql": [0, 3], "sparqlquerymanag": [0, 3], "cach": [0, 4, 6], "log_validation_and_json_schema_error": [0, 3], "createlocalcopyrespons": [0, 6], "adaptertoservelocalfilewhenhttprequestfail": [0, 3], "close": [0, 3], "http_adapt": [0, 3], "send": [0, 3], "csvdataset": [0, 6], "csv": [0, 2, 4], "dataset": [0, 1, 4], "filter_components_from_dsd": [0, 3], "get_single_measure_from_dsd": [0, 3], "get_standard_shape_measure_col_name_from_dsd": [0, 3], "get_standard_shape_unit_col_name_from_dsd": [0, 3], "transform_dataset_to_canonical_shap": [0, 3], "csvw": [0, 2, 4, 6], "w": [0, 2, 4], "get_dependent_local_fil": [0, 3], "load_table_schema_file_to_graph": [0, 3], "datetim": [0, 6], "parse_iso_8601_date_tim": [0, 3], "dict": [0, 4, 6], "dictionari": [0, 4], "get_from_dict_ensure_exist": [0, 3], "get_with_func_or_non": [0, 3], "rdf_resource_to_json_ld": [0, 3], "file": [0, 2, 4, 6], "code_list_config_json_exist": [0, 3], "copy_files_to_directory_with_structur": [0, 3], "get_root_dir_level": [0, 3], "iter": [0, 6], "first": [0, 3], "group_bi": [0, 3], "singl": [0, 3], "json": [0, 1, 2, 4, 6], "load_json_docu": [0, 3], "resolve_path": [0, 3], "serialize_set": [0, 3], "to_json_path": [0, 3], "log": [0, 6], "customformatt": [0, 3], "format": [0, 2, 3, 4], "bold_r": [0, 3], "grei": [0, 3], "light_grei": [0, 3], "red": [0, 3], "reset": [0, 3], "yellow": [0, 3], "debug_log_except": [0, 3], "log_except": [0, 3], "start_log": [0, 3], "read_csv": [0, 3], "printabl": [0, 2, 6], "get_printable_list_str": [0, 3], "get_printable_tabular_str_from_list": [0, 3], "rdf": [0, 4, 6], "parse_graph_retain_rel": [0, 3], "tableschema": [0, 6], "tabl": [0, 2, 4], "schema": [0, 4], "csvwrdfmanag": [0, 3], "csvw_metadata_file_path": [0, 3], "rdf_graph": [0, 3, 4], "add_triples_for_file_depend": [0, 3], "text": [0, 6], "truncat": [0, 3], "uri": [0, 4, 6], "csvw_column_name_saf": [0, 3], "ensure_looks_like_uri": [0, 3], "ensure_values_in_lists_looks_like_uri": [0, 3], "file_uri_to_path": [0, 3], "get_data_type_uri_from_str": [0, 3], "get_last_uri_part": [0, 3], "looks_like_uri": [0, 3], "uri_saf": [0, 3], "valid": [0, 1, 2, 6], "all_of": [0, 3], "any_of": [0, 3], "boolean": [0, 3, 4], "data_typ": [0, 3], "enum": [0, 3, 4], "float": [0, 3], "integ": [0, 3], "is_instance_of": [0, 3], "list": [0, 2, 3], "option": [0, 3, 4], "string": [0, 2, 3], "validated_model": [0, 3], "version": [0, 6], "get_csvcubed_version_uri": [0, 3], "defin": [0, 4], "root": 0, "project": [0, 3, 4], "path": [0, 2, 3, 4], "well": 0, "hold": 0, "constant": 0, "repres": 0, "templat": 0, "special": 0, "properti": [0, 2, 3, 4], "pandas_input_to_columnar": [0, 6], "maybe_columnar_data": 0, "datafram": [0, 2, 3, 4], "seri": 0, "none": [0, 2, 3, 4], "allow_no_data_at_al": 0, "bool": [0, 3, 4], "true": [0, 3, 4], "pandas_input_to_columnar_list": [0, 6], "ani": [0, 1, 3, 4], "pandas_input_to_columnar_optional_str": [0, 6], "str": [0, 1, 2, 3, 4], "pandas_input_to_columnar_str": [0, 6], "convert": [0, 3, 4], "data": [0, 2, 3], "an": [0, 1, 3, 4], "ensur": [0, 3], "valu": [0, 2, 3, 4], "ar": [0, 3, 4], "miss": 0, "return": [0, 1, 2, 3, 4], "A": [0, 3], "gener": [0, 2, 3, 4], "check": [0, 3], "rais": [0, 3, 4], "valueerror": [0, 3], "when": [0, 3, 4], "i": [0, 1, 2, 3, 4], "command": [1, 3], "manag": 1, "get_concepts_hierarchy_info": [1, 2], "get_dataset_observations_info": [1, 2], "get_dataset_val_counts_info": [1, 2], "load_csv_to_datafram": [1, 2], "metadata": [1, 3, 4], "input": [1, 4, 6], "handler": 1, "metadatavalid": [1, 2], "csvw_metadata_json_path": [1, 2], "csvw_metadata_rdf_graph": [1, 2], "detect_csvw_typ": [1, 2], "printer": 1, "catalog_metadata_print": [1, 2], "codelist_hierachy_info_print": [1, 2], "codelist_info_print": [1, 2], "column_component_info_print": [1, 2], "csvw_type_str": [1, 2], "dataset_observations_info_print": [1, 2], "dataset_val_counts_by_measure_unit_info_print": [1, 2], "generate_codelist_result": [1, 2], "generate_general_result": [1, 2], "get_csvw_type_str": [1, 2], "get_datacube_result": [1, 2], "get_parent_label_unique_id_col_titl": [1, 2], "get_primary_csv_url": [1, 2, 3, 4], "primary_csv_column_definit": [1, 2], "primary_csv_url": [1, 2], "primary_cube_table_identifi": [1, 2], "result_catalog_metadata": [1, 2], "result_code_list_col": [1, 2], "result_column_component_info": [1, 2], "result_concepts_hierachy_info": [1, 2], "result_dataset_observations_info": [1, 2], "result_dataset_value_count": [1, 2], "result_primary_csv_code_list": [1, 2], "state": [1, 2], "type_info_print": [1, 2], "The": [1, 2, 3, 4], "line": 1, "interfac": 1, "error": [1, 3], "validationerror": [1, 3, 4], "given": [1, 2, 3, 4], "messag": [1, 3], "tailor": 1, "qube": [1, 4], "config": [1, 3, 4], "so": 1, "": [1, 3, 4], "more": [1, 3, 4], "user": [1, 2, 3], "friendli": [1, 2, 3], "note": 1, "ad": 1, "new": 1, "requir": 1, "test": [1, 3], "test_build_friendly_error_msg": 1, "py": [1, 2, 3, 4], "output": 2, "through": 2, "member": [2, 3, 4], "collect": [2, 3, 4], "function": [2, 3, 4], "handl": [2, 3, 4], "relat": [2, 3, 4], "oper": [2, 3], "us": [2, 3], "parent_col": 2, "label_col": 2, "unique_identifi": 2, "codelisthierarchyinforesult": 2, "from": [2, 3, 4], "codelist": [2, 4], "csvw_type": [2, 3, 4], "csvwtype": [2, 4], "cube_shap": 2, "cubeshap": [2, 4], "datasetobservationsinforesult": 2, "measure_col": 2, "unit_col": 2, "datasetobservationsbymeasureunitinforesult": 2, "json_path": [2, 3, 4], "csv_path": 2, "load": [2, 3, 4], "panda": [2, 4, 6], "provid": [2, 3, 4], "detect": 2, "its": [2, 4], "type": [2, 3, 4], "e": [2, 3, 4], "datacub": 2, "other": 2, "class": [2, 3, 4], "conjunctivegraph": [2, 3, 4], "base": [2, 3, 4], "object": [2, 3, 4], "thi": [2, 3, 4], "datacubeinspector": [2, 3, 4], "codelistinspector": [2, 3, 4], "produc": 2, "necessari": [2, 4], "catalog": [2, 4], "g": [2, 3, 4], "titl": [2, 4], "descript": 2, "which": [2, 3, 4], "code": [2, 3], "concept": [2, 4], "hierarchi": 2, "structur": [2, 3], "definit": [2, 3, 4, 6], "dsd": [2, 4], "inform": [2, 3, 4], "column": [2, 3, 4], "name": [2, 3, 4], "etc": [2, 4], "top": 2, "10": [2, 3], "last": [2, 3], "record": [2, 3], "set": [2, 3, 4], "count": 2, "broken": 2, "down": 2, "measur": [2, 3, 4], "unit": [2, 3, 4], "result": [2, 3, 4], "specif": [2, 3, 4], "cube": [2, 3], "static": 2, "being": [2, 3, 4], "evalu": 2, "columndefinit": [2, 4], "primary_key_col": 2, "tupl": [2, 3, 4], "contain": [2, 3, 4], "parent": 2, "label": [2, 3, 4], "uniqu": 2, "id": 2, "csv_url": [2, 3, 4], "primari": [2, 4], "graph": [2, 3, 4], "cubetableidentifi": [2, 4], "catalogmetadataresult": [2, 4], "columncomponentinfo": [2, 3], "codelistsresult": [2, 4], "inspector": 3, "get_catalog_metadata_for_concept_schem": [3, 4], "get_map_code_list_uri_to_label": [3, 4], "get_table_identifiers_for_concept_schem": [3, 4], "column_definit": [3, 4], "column_typ": [3, 4], "compon": [3, 4], "csvwinspector": [3, 4], "catalog_metadata": [3, 4], "csvw_json_path": [3, 4], "get_column_definitions_for_csv": [3, 4], "get_primary_catalog_metadata": [3, 4], "get_table_info_for_csv_url": [3, 4], "primary_graph_uri": [3, 4], "code_list_inspector_in": [3, 4], "get_attribute_value_uris_and_label": [3, 4], "get_code_lists_and_col": [3, 4], "get_column_component_info": [3, 4], "get_columns_of_typ": [3, 4], "get_cube_identifiers_for_csv": [3, 4], "get_cube_identifiers_for_data_set": [3, 4], "get_datafram": [3, 4], "get_dsd_qube_components_for_csv": [3, 4], "get_measure_uris_and_label": [3, 4], "get_shape_for_csv": [3, 4], "get_unit_for_uri": [3, 4], "get_unit": [3, 4], "ask": [3, 4], "none_or_map": [3, 4], "path_to_file_uri_for_rdflib": [3, 4], "select": [3, 4], "queri": 3, "sparqlquerynam": [3, 4], "ask_is_codelist": [3, 4], "ask_is_qb_dataset": [3, 4], "select_catalog_metadata": [3, 4], "select_codelists_and_col": [3, 4], "select_codelist_cols_by_csv_url": [3, 4], "select_codelist_primary_key_by_csv_url": [3, 4], "select_column_definit": [3, 4], "select_csvw_table_schema_file_depend": [3, 4], "select_data_set_dsd_csv_url": [3, 4], "select_dsd_qube_compon": [3, 4], "select_is_pivoted_shape_for_measures_in_data_set": [3, 4], "select_labels_for_resource_uri": [3, 4], "select_metadata_depend": [3, 4], "select_table_schema_properti": [3, 4], "select_unit": [3, 4], "ask_is_csvw_code_list": [3, 4], "ask_is_csvw_qb_dataset": [3, 4], "select_csvw_catalog_metadata": [3, 4], "select_csvw_dsd_qube_compon": [3, 4], "select_data_set_dsd_and_csv_url": [3, 4], "select_dsd_code_list_and_col": [3, 4], "select_primary_key_col_names_by_csv_url": [3, 4], "method": 3, "output_directori": 3, "validation_error": 3, "json_schema_validation_error": 3, "jsonschemavalidationerror": 3, "validation_errors_file_nam": 3, "fail_when_validation_error_occur": 3, "fals": [3, 4], "write": 3, "specifi": [3, 4], "loaction": 3, "baseadapt": 3, "custom": 3, "transport": 3, "adapt": 3, "local": 3, "copi": 3, "request": [3, 4], "onli": [3, 4], "event": [3, 4], "http": 3, "fail": 3, "like": 3, "due": [3, 4], "connect": 3, "issu": [3, 4], "clean": 3, "up": 3, "item": 3, "httpadapt": 3, "stream": 3, "timeout": 3, "verifi": 3, "cert": 3, "proxi": 3, "preparedrequest": 3, "respons": 3, "paramet": 3, "sent": 3, "whether": [3, 4], "how": 3, "long": 3, "wait": 3, "server": 3, "befor": 3, "give": 3, "read": 3, "either": 3, "case": 3, "control": 3, "we": 3, "tl": 3, "certif": 3, "must": 3, "ca": 3, "bundl": 3, "ssl": 3, "trust": 3, "appli": 3, "qubecomponentresult": [3, 4], "field": 3, "componentfield": 3, "filter": 3, "datasetsinglemeasureresult": 3, "identifi": [3, 4], "standard": [3, 4], "shape": [3, 4], "qube_compon": 3, "transform": 3, "canon": 3, "alreadi": 3, "pd": 3, "work": [3, 4], "csvw_metadata_fil": 3, "n": 3, "b": 3, "bit": 3, "rough": 3, "readi": 3, "mai": [3, 4], "catch": 3, "all": [3, 4], "depend": [3, 4], "howev": 3, "should": 3, "style": [3, 4], "current": 3, "table_schema_file_path": 3, "table_schema_file_identifi": 3, "flavour": 3, "date": [3, 4], "time": [3, 4], "within": [3, 4], "date_or_date_tim": 3, "pars": 3, "iso": 3, "8601": 3, "help": [3, 4], "t": 3, "kei": [3, 4], "cannot": [3, 4], "find": 3, "except": 3, "found": [3, 4], "d": 3, "prop_nam": 3, "func": 3, "callabl": [3, 4], "exist": 3, "OR": 3, "resourc": 3, "newresourc": 3, "model": 3, "ld": [3, 4], "code_list_config_path": 3, "cube_config_path": 3, "common_par": 3, "to_dir": 3, "retain": 3, "directori": 3, "below": 3, "end_fil": 3, "start_dir": 3, "posixpath": 3, "recurs": 3, "move": 3, "backward": 3, "dir": 3, "tree": 3, "until": 3, "If": 3, "x": 3, "abc": 3, "predic": 3, "lambda": 3, "match": 3, "get_kei": 3, "group": 3, "each": [3, 4], "item_nam": 3, "zero": 3, "than": 3, "one": [3, 4], "file_uri_or_path": 3, "accept": 3, "file_uri": 3, "deserialis": 3, "document": 3, "python": 3, "url": [3, 4], "exampl": 3, "com": 3, "some": 3, "myuser": 3, "pathlib": [3, 4], "path_to_resolv": 3, "int": 3, "along": 3, "entir": 3, "follow": 3, "ref": 3, "link": 3, "obj": 3, "serialis": 3, "path_part": 3, "part": [3, 4], "compat": 3, "pypi": 3, "org": 3, "jsonpath": 3, "ng": 3, "goessner": 3, "net": 3, "articl": 3, "fmt": 3, "datefmt": 3, "formatt": 3, "x1b": 3, "2": 3, "20m": 3, "asctim": 3, "levelnam": 3, "filenam": 3, "lineno": 3, "0m": 3, "20": 3, "1": 3, "50m": 3, "30": 3, "33": 3, "40": 3, "31": 3, "50": 3, "1m": 3, "attribut": [3, 4], "operand": 3, "yield": 3, "coupl": 3, "preparatori": 3, "step": 3, "carri": 3, "out": 3, "comput": 3, "logrecord": 3, "getmessag": 3, "determin": 3, "call": 3, "usestim": 3, "formattim": 3, "formatexcept": 3, "append": 3, "logger": 3, "log_dir_nam": 3, "selected_logging_level": 3, "addit": 3, "csv_path_or_url": 3, "keep_default_na": 3, "na_valu": 3, "dtype": 3, "usecol": 3, "without": 3, "default": 3, "na": 3, "chang": 3, "nan": 3, "validationexcept": 3, "represent": 3, "column_nam": 3, "tabular": 3, "process": 3, "sourc": 3, "locat": 3, "byte": 3, "bytearrai": 3, "arg": 3, "rdflib": [3, 4], "where": 3, "rel": 3, "featur": 3, "paths_relative_to": 3, "follow_relative_path_dependencies_onli": 3, "transit": 3, "expos": 3, "publicli": 3, "re": [3, 4], "pmd": 3, "manipul": 3, "message_truncate_at": 3, "length": 3, "add": 3, "elipsi": 3, "perform": 3, "safe": 3, "look": 3, "doe": 3, "normalis": 3, "Will": 3, "both": 3, "window": [3, 4], "linux": 3, "unix": 3, "get": [3, 4], "segment": 3, "after": 3, "maybe_uri": 3, "someth": 3, "can": 3, "formerli": 3, "known": 3, "pathifi": 3, "condit": 3, "validatemodelpropertieserror": 3, "argument": 3, "instanc": [3, 4], "union": 3, "property_path": 3, "fact": 3, "isn": 3, "enum_typ": 3, "expect_instance_typ": 3, "manner": 3, "what": 3, "expect": 3, "save": 3, "effort": 3, "have": [3, 4], "creat": 3, "do": 3, "inherit": 3, "validatedmodel": 3, "validate_list_item": 3, "loop": 3, "validate_item": 3, "empti": 3, "els": 3, "validated_model_typ": 3, "u": 3, "implement": 3, "infom": 3, "allow": 4, "api": 4, "access": 4, "about": 4, "concept_scheme_url": 4, "catalogu": 4, "conceptschem": 4, "keyerror": 4, "concept_scheme_uri": 4, "map": 4, "human": 4, "readabl": 4, "retriev": 4, "wa": 4, "codelisttableidentif": 4, "scheme": 4, "back": 4, "underli": 4, "datastructuredefinit": 4, "endusercolumntyp": 4, "situat": 4, "mark": 4, "suppress": 4, "observ": 4, "modif": 4, "support": 4, "also": 4, "graph_uri": 4, "dcat": 4, "qbdataset": 4, "associ": 4, "tableschemapropertiesresult": 4, "store": 4, "dataclass": 4, "initvar": 4, "nomenclatur": 4, "directli": 4, "them": 4, "same": 4, "order": 4, "data_set_uri": 4, "dereference_uri": 4, "wish": 4, "duplicatecolumntitleerror": 4, "two": 4, "mean": 4, "qubecomponentsresult": 4, "unitresult": 4, "run": 4, "query_nam": 4, "execut": 4, "yeild": 4, "val": 4, "map_func": 4, "alter": 4, "thei": 4, "init_bind": 4, "node": 4, "values_bind": 4, "valuesbind": 4, "resultrow": 4, "sko": 4, "qb": 4, "correspond": 4, "modifi": 4, "map_dsd_uri_to_csv_url": 4, "map_csv_url_to_column_definit": 4, "map_csv_url_to_cube_shap": 4, "csvwtableschemafiledependenciesresult": 4, "csvwtabelschemasresult": 4, "codelistinfosparqlresult": 4, "cube_table_identifi": 4, "ispivotedshapemeasureresult": 4, "pivot": 4, "resource_uri": 4, "metadatadependenciesresult": 4, "extract": 4, "void": 4, "datadump": 4, "table_url": 4, "primarykeycolnamesbydataseturlresult": 4, "about_url": 4, "packag": [5, 6], "index": 5, "modul": [5, 6], "search": 5, "page": 5, "subpackag": 6, "submodul": 6, "content": 6}, "objects": {"": [[0, 0, 0, "-", "csvcubed"]], "csvcubed": [[1, 0, 0, "-", "cli"], [0, 0, 0, "-", "definitions"], [0, 0, 0, "-", "inputs"], [3, 0, 0, "-", "utils"]], "csvcubed.cli": [[1, 0, 0, "-", "entrypoint"], [1, 0, 0, "-", "error_mapping"], [2, 0, 0, "-", "inspectcsvw"]], "csvcubed.cli.error_mapping": [[1, 1, 1, "", "friendly_error_mapping"]], "csvcubed.cli.inspectcsvw": [[2, 0, 0, "-", "inspect"], [2, 0, 0, "-", "inspectdatasetmanager"], [2, 0, 0, "-", "metadatainputvalidator"], [2, 0, 0, "-", "metadataprinter"]], "csvcubed.cli.inspectcsvw.inspect": [[2, 1, 1, "", "inspect"]], "csvcubed.cli.inspectcsvw.inspectdatasetmanager": [[2, 1, 1, "", "get_concepts_hierarchy_info"], [2, 1, 1, "", "get_dataset_observations_info"], [2, 1, 1, "", "get_dataset_val_counts_info"], [2, 1, 1, "", "load_csv_to_dataframe"]], "csvcubed.cli.inspectcsvw.metadatainputvalidator": [[2, 2, 1, "", "MetadataValidator"]], "csvcubed.cli.inspectcsvw.metadatainputvalidator.MetadataValidator": [[2, 3, 1, "", "csvw_metadata_json_path"], [2, 3, 1, "", "csvw_metadata_rdf_graph"], [2, 4, 1, "", "detect_csvw_type"]], "csvcubed.cli.inspectcsvw.metadataprinter": [[2, 2, 1, "", "MetadataPrinter"]], "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter": [[2, 5, 1, "", "catalog_metadata_printable"], [2, 5, 1, "", "codelist_hierachy_info_printable"], [2, 5, 1, "", "codelist_info_printable"], [2, 5, 1, "", "column_component_info_printable"], [2, 3, 1, "", "csvw_type_str"], [2, 3, 1, "", "dataset"], [2, 5, 1, "", "dataset_observations_info_printable"], [2, 5, 1, "", "dataset_val_counts_by_measure_unit_info_printable"], [2, 4, 1, "", "generate_codelist_results"], [2, 4, 1, "", "generate_general_results"], [2, 4, 1, "", "get_csvw_type_str"], [2, 4, 1, "", "get_datacube_results"], [2, 4, 1, "", "get_parent_label_unique_id_col_titles"], [2, 4, 1, "", "get_primary_csv_url"], [2, 3, 1, "", "primary_csv_column_definitions"], [2, 3, 1, "", "primary_csv_url"], [2, 3, 1, "", "primary_cube_table_identifiers"], [2, 3, 1, "", "result_catalog_metadata"], [2, 3, 1, "", "result_code_list_cols"], [2, 3, 1, "", "result_column_component_infos"], [2, 3, 1, "", "result_concepts_hierachy_info"], [2, 3, 1, "", "result_dataset_observations_info"], [2, 3, 1, "", "result_dataset_value_counts"], [2, 3, 1, "", "result_primary_csv_code_lists"], [2, 3, 1, "", "state"], [2, 5, 1, "", "type_info_printable"]], "csvcubed.inputs": [[0, 1, 1, "", "pandas_input_to_columnar"], [0, 1, 1, "", "pandas_input_to_columnar_list"], [0, 1, 1, "", "pandas_input_to_columnar_optional_str"], [0, 1, 1, "", "pandas_input_to_columnar_str"]], "csvcubed.utils": [[3, 0, 0, "-", "cache"], [3, 0, 0, "-", "cli"], [3, 0, 0, "-", "createlocalcopyresponse"], [3, 0, 0, "-", "csvdataset"], [3, 0, 0, "-", "csvw"], [3, 0, 0, "-", "datetime"], [3, 0, 0, "-", "dict"], [3, 0, 0, "-", "file"], [3, 0, 0, "-", "iterables"], [3, 0, 0, "-", "json"], [3, 0, 0, "-", "log"], [3, 0, 0, "-", "pandas"], [3, 0, 0, "-", "printable"], [3, 0, 0, "-", "rdf"], [4, 0, 0, "-", "sparql_handler"], [3, 0, 0, "-", "tableschema"], [3, 0, 0, "-", "text"], [3, 0, 0, "-", "uri"], [3, 0, 0, "-", "validations"], [3, 0, 0, "-", "version"]], "csvcubed.utils.cli": [[3, 1, 1, "", "log_validation_and_json_schema_errors"]], "csvcubed.utils.createlocalcopyresponse": [[3, 2, 1, "", "AdapterToServeLocalFileWhenHTTPRequestFails"]], "csvcubed.utils.createlocalcopyresponse.AdapterToServeLocalFileWhenHTTPRequestFails": [[3, 4, 1, "", "close"], [3, 3, 1, "", "http_adapter"], [3, 4, 1, "", "send"]], "csvcubed.utils.csvdataset": [[3, 1, 1, "", "filter_components_from_dsd"], [3, 1, 1, "", "get_single_measure_from_dsd"], [3, 1, 1, "", "get_standard_shape_measure_col_name_from_dsd"], [3, 1, 1, "", "get_standard_shape_unit_col_name_from_dsd"], [3, 1, 1, "", "transform_dataset_to_canonical_shape"]], "csvcubed.utils.csvw": [[3, 1, 1, "", "get_dependent_local_files"], [3, 1, 1, "", "load_table_schema_file_to_graph"]], "csvcubed.utils.datetime": [[3, 1, 1, "", "parse_iso_8601_date_time"]], "csvcubed.utils.dict": [[3, 1, 1, "", "get_from_dict_ensure_exists"], [3, 1, 1, "", "get_with_func_or_none"], [3, 1, 1, "", "rdf_resource_to_json_ld"]], "csvcubed.utils.file": [[3, 1, 1, "", "code_list_config_json_exists"], [3, 1, 1, "", "copy_files_to_directory_with_structure"], [3, 1, 1, "", "get_root_dir_level"]], "csvcubed.utils.iterables": [[3, 1, 1, "", "first"], [3, 1, 1, "", "group_by"], [3, 1, 1, "", "single"]], "csvcubed.utils.json": [[3, 1, 1, "", "load_json_document"], [3, 1, 1, "", "resolve_path"], [3, 1, 1, "", "serialize_sets"], [3, 1, 1, "", "to_json_path"]], "csvcubed.utils.log": [[3, 2, 1, "", "CustomFormatter"], [3, 1, 1, "", "debug_log_exception"], [3, 1, 1, "", "log_exception"], [3, 1, 1, "", "start_logging"]], "csvcubed.utils.log.CustomFormatter": [[3, 3, 1, "", "FORMATS"], [3, 3, 1, "", "bold_red"], [3, 4, 1, "", "format"], [3, 3, 1, "", "formatting"], [3, 3, 1, "", "grey"], [3, 3, 1, "", "light_grey"], [3, 3, 1, "", "red"], [3, 3, 1, "", "reset"], [3, 3, 1, "", "yellow"]], "csvcubed.utils.pandas": [[3, 1, 1, "", "read_csv"]], "csvcubed.utils.printable": [[3, 1, 1, "", "get_printable_list_str"], [3, 1, 1, "", "get_printable_tabular_str_from_list"]], "csvcubed.utils.rdf": [[3, 1, 1, "", "parse_graph_retain_relative"]], "csvcubed.utils.sparql_handler": [[4, 0, 0, "-", "code_list_inspector"], [4, 0, 0, "-", "column_component_info"], [4, 0, 0, "-", "csvw_inspector"], [4, 0, 0, "-", "data_cube_inspector"], [4, 0, 0, "-", "sparql"], [4, 0, 0, "-", "sparqlquerymanager"]], "csvcubed.utils.sparql_handler.code_list_inspector": [[4, 2, 1, "", "CodeListInspector"]], "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector": [[4, 3, 1, "", "csvw_inspector"], [4, 4, 1, "", "get_catalog_metadata_for_concept_scheme"], [4, 4, 1, "", "get_map_code_list_uri_to_label"], [4, 4, 1, "", "get_primary_csv_url"], [4, 4, 1, "", "get_table_identifiers_for_concept_scheme"]], "csvcubed.utils.sparql_handler.column_component_info": [[4, 2, 1, "", "ColumnComponentInfo"]], "csvcubed.utils.sparql_handler.column_component_info.ColumnComponentInfo": [[4, 3, 1, "", "column_definition"], [4, 3, 1, "", "column_type"], [4, 3, 1, "", "component"]], "csvcubed.utils.sparql_handler.csvw_inspector": [[4, 2, 1, "", "CsvWInspector"]], "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector": [[4, 5, 1, "", "catalog_metadata"], [4, 5, 1, "", "column_definitions"], [4, 3, 1, "", "csvw_json_path"], [4, 5, 1, "", "csvw_type"], [4, 4, 1, "", "get_column_definitions_for_csv"], [4, 4, 1, "", "get_primary_catalog_metadata"], [4, 4, 1, "", "get_table_info_for_csv_url"], [4, 3, 1, "", "primary_graph_uri"], [4, 3, 1, "", "rdf_graph"]], "csvcubed.utils.sparql_handler.data_cube_inspector": [[4, 2, 1, "", "DataCubeInspector"]], "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector": [[4, 3, 1, "", "code_list_inspector_in"], [4, 3, 1, "", "csvw_inspector"], [4, 4, 1, "", "get_attribute_value_uris_and_labels"], [4, 4, 1, "", "get_code_lists_and_cols"], [4, 4, 1, "", "get_column_component_info"], [4, 4, 1, "", "get_columns_of_type"], [4, 4, 1, "", "get_cube_identifiers_for_csv"], [4, 4, 1, "", "get_cube_identifiers_for_data_set"], [4, 4, 1, "", "get_dataframe"], [4, 4, 1, "", "get_dsd_qube_components_for_csv"], [4, 4, 1, "", "get_measure_uris_and_labels"], [4, 4, 1, "", "get_primary_csv_url"], [4, 4, 1, "", "get_shape_for_csv"], [4, 4, 1, "", "get_unit_for_uri"], [4, 4, 1, "", "get_units"]], "csvcubed.utils.sparql_handler.sparql": [[4, 1, 1, "", "ask"], [4, 1, 1, "", "none_or_map"], [4, 1, 1, "", "path_to_file_uri_for_rdflib"], [4, 1, 1, "", "select"]], "csvcubed.utils.sparql_handler.sparqlquerymanager": [[4, 2, 1, "", "SPARQLQueryName"], [4, 1, 1, "", "ask_is_csvw_code_list"], [4, 1, 1, "", "ask_is_csvw_qb_dataset"], [4, 1, 1, "", "select_column_definitions"], [4, 1, 1, "", "select_csvw_catalog_metadata"], [4, 1, 1, "", "select_csvw_dsd_qube_components"], [4, 1, 1, "", "select_csvw_table_schema_file_dependencies"], [4, 1, 1, "", "select_data_set_dsd_and_csv_url"], [4, 1, 1, "", "select_dsd_code_list_and_cols"], [4, 1, 1, "", "select_is_pivoted_shape_for_measures_in_data_set"], [4, 1, 1, "", "select_labels_for_resource_uris"], [4, 1, 1, "", "select_metadata_dependencies"], [4, 1, 1, "", "select_primary_key_col_names_by_csv_url"], [4, 1, 1, "", "select_table_schema_properties"], [4, 1, 1, "", "select_units"]], "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName": [[4, 3, 1, "", "ASK_IS_CODELIST"], [4, 3, 1, "", "ASK_IS_QB_DATASET"], [4, 3, 1, "", "SELECT_CATALOG_METADATA"], [4, 3, 1, "", "SELECT_CODELISTS_AND_COLS"], [4, 3, 1, "", "SELECT_CODELIST_COLS_BY_CSV_URL"], [4, 3, 1, "", "SELECT_CODELIST_PRIMARY_KEY_BY_CSV_URL"], [4, 3, 1, "", "SELECT_COLUMN_DEFINITIONS"], [4, 3, 1, "", "SELECT_CSVW_TABLE_SCHEMA_FILE_DEPENDENCIES"], [4, 3, 1, "", "SELECT_DATA_SET_DSD_CSV_URL"], [4, 3, 1, "", "SELECT_DSD_QUBE_COMPONENTS"], [4, 3, 1, "", "SELECT_IS_PIVOTED_SHAPE_FOR_MEASURES_IN_DATA_SET"], [4, 3, 1, "", "SELECT_LABELS_FOR_RESOURCE_URIS"], [4, 3, 1, "", "SELECT_METADATA_DEPENDENCIES"], [4, 3, 1, "", "SELECT_TABLE_SCHEMA_PROPERTIES"], [4, 3, 1, "", "SELECT_UNITS"]], "csvcubed.utils.tableschema": [[3, 2, 1, "", "CsvWRdfManager"], [3, 1, 1, "", "add_triples_for_file_dependencies"]], "csvcubed.utils.tableschema.CsvWRdfManager": [[3, 5, 1, "", "csvw_inspector"], [3, 3, 1, "", "csvw_metadata_file_path"], [3, 3, 1, "", "rdf_graph"]], "csvcubed.utils.text": [[3, 1, 1, "", "truncate"]], "csvcubed.utils.uri": [[3, 1, 1, "", "csvw_column_name_safe"], [3, 1, 1, "", "ensure_looks_like_uri"], [3, 1, 1, "", "ensure_values_in_lists_looks_like_uris"], [3, 1, 1, "", "file_uri_to_path"], [3, 1, 1, "", "get_data_type_uri_from_str"], [3, 1, 1, "", "get_last_uri_part"], [3, 1, 1, "", "looks_like_uri"], [3, 1, 1, "", "uri_safe"]], "csvcubed.utils.validations": [[3, 1, 1, "", "all_of"], [3, 1, 1, "", "any_of"], [3, 1, 1, "", "boolean"], [3, 1, 1, "", "data_type"], [3, 1, 1, "", "enum"], [3, 1, 1, "", "file"], [3, 1, 1, "", "float"], [3, 1, 1, "", "integer"], [3, 1, 1, "", "is_instance_of"], [3, 1, 1, "", "list"], [3, 1, 1, "", "optional"], [3, 1, 1, "", "string"], [3, 1, 1, "", "uri"], [3, 1, 1, "", "validated_model"]], "csvcubed.utils.version": [[3, 1, 1, "", "get_csvcubed_version_uri"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"csvcube": [0, 1, 2, 3, 4, 5, 6], "packag": [0, 1, 2, 3, 4], "subpackag": [0, 1, 3], "submodul": [0, 1, 2, 3, 4], "definit": 0, "modul": [0, 1, 2, 3, 4], "input": [0, 2], "panda": [0, 3], "content": [0, 1, 2, 3, 4, 5], "cli": [1, 2, 3], "entrypoint": 1, "error_map": 1, "inspectcsvw": 2, "inspect": 2, "command": 2, "inspectdatasetmanag": 2, "dataset": [2, 3], "manag": 2, "metadatainputvalid": 2, "metadata": 2, "handler": 2, "metadataprint": 2, "printer": 2, "util": [3, 4], "cach": 3, "createlocalcopyrespons": 3, "csvdataset": 3, "csv": 3, "csvw": 3, "w": 3, "datetim": 3, "dict": 3, "dictionari": 3, "file": 3, "iter": 3, "json": 3, "log": 3, "printabl": 3, "rdf": 3, "tableschema": 3, "tabl": [3, 5], "schema": 3, "text": 3, "uri": 3, "valid": 3, "version": 3, "sparql_handl": 4, "code_list_inspector": 4, "code": 4, "list": 4, "inspector": 4, "column_component_info": 4, "columncomponentinfo": 4, "csvw_inspector": 4, "data_cube_inspector": 4, "data": 4, "cube": 4, "sparql": 4, "sparqlquerymanag": 4, "queri": 4, "welcom": 5, "": 5, "document": 5, "indic": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"csvcubed package": [[0, "csvcubed-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [3, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "csvcubed.definitions module": [[0, "module-csvcubed.definitions"]], "Definitions": [[0, "definitions"]], "csvcubed.inputs module": [[0, "module-csvcubed.inputs"]], "Pandas Inputs": [[0, "pandas-inputs"]], "Module contents": [[0, "module-csvcubed"], [1, "module-csvcubed.cli"], [2, "module-csvcubed.cli.inspectcsvw"], [3, "module-csvcubed.utils"], [4, "module-csvcubed.utils.sparql_handler"]], "csvcubed.cli package": [[1, "csvcubed-cli-package"]], "csvcubed.cli.entrypoint module": [[1, "module-csvcubed.cli.entrypoint"]], "CLI": [[1, "cli"], [3, "cli"]], "csvcubed.cli.error_mapping module": [[1, "module-csvcubed.cli.error_mapping"]], "csvcubed.cli.inspectcsvw package": [[2, "csvcubed-cli-inspectcsvw-package"]], "csvcubed.cli.inspectcsvw.inspect module": [[2, "module-csvcubed.cli.inspectcsvw.inspect"]], "Inspect Command": [[2, "inspect-command"]], "csvcubed.cli.inspectcsvw.inspectdatasetmanager module": [[2, "module-csvcubed.cli.inspectcsvw.inspectdatasetmanager"]], "Inspect Dataset Manager": [[2, "inspect-dataset-manager"]], "csvcubed.cli.inspectcsvw.metadatainputvalidator module": [[2, "module-csvcubed.cli.inspectcsvw.metadatainputvalidator"]], "Metadata Input Handler": [[2, "metadata-input-handler"]], "csvcubed.cli.inspectcsvw.metadataprinter module": [[2, "module-csvcubed.cli.inspectcsvw.metadataprinter"]], "Metadata Printer": [[2, "metadata-printer"]], "csvcubed.utils package": [[3, "csvcubed-utils-package"]], "csvcubed.utils.cache module": [[3, "module-csvcubed.utils.cache"]], "csvcubed.utils.cli module": [[3, "module-csvcubed.utils.cli"]], "csvcubed.utils.createlocalcopyresponse module": [[3, "module-csvcubed.utils.createlocalcopyresponse"]], "csvcubed.utils.csvdataset module": [[3, "module-csvcubed.utils.csvdataset"]], "CSV Dataset": [[3, "csv-dataset"]], "csvcubed.utils.csvw module": [[3, "module-csvcubed.utils.csvw"]], "CSV-W": [[3, "csv-w"]], "csvcubed.utils.datetime module": [[3, "module-csvcubed.utils.datetime"]], "Csvcubed DateTime Utils": [[3, "csvcubed-datetime-utils"]], "csvcubed.utils.dict module": [[3, "module-csvcubed.utils.dict"]], "Dictionary": [[3, "dictionary"]], "csvcubed.utils.file module": [[3, "module-csvcubed.utils.file"]], "File": [[3, "file"]], "csvcubed.utils.iterables module": [[3, "module-csvcubed.utils.iterables"]], "Iterables": [[3, "iterables"]], "csvcubed.utils.json module": [[3, "module-csvcubed.utils.json"]], "JSON Utilities": [[3, "json-utilities"]], "csvcubed.utils.log module": [[3, "module-csvcubed.utils.log"]], "Log": [[3, "log"]], "csvcubed.utils.pandas module": [[3, "module-csvcubed.utils.pandas"]], "Pandas Utils": [[3, "pandas-utils"]], "csvcubed.utils.printable module": [[3, "module-csvcubed.utils.printable"]], "csvcubed.utils.rdf module": [[3, "module-csvcubed.utils.rdf"]], "RDF": [[3, "rdf"]], "csvcubed.utils.tableschema module": [[3, "module-csvcubed.utils.tableschema"]], "Table Schema": [[3, "table-schema"]], "csvcubed.utils.text module": [[3, "module-csvcubed.utils.text"]], "Text Utilities": [[3, "text-utilities"]], "csvcubed.utils.uri module": [[3, "module-csvcubed.utils.uri"]], "URI": [[3, "uri"]], "csvcubed.utils.validations module": [[3, "module-csvcubed.utils.validations"]], "csvcubed.utils.version module": [[3, "module-csvcubed.utils.version"]], "csvcubed.utils.sparql_handler package": [[4, "csvcubed-utils-sparql-handler-package"]], "csvcubed.utils.sparql_handler.code_list_inspector module": [[4, "module-csvcubed.utils.sparql_handler.code_list_inspector"]], "Code List Inspector": [[4, "code-list-inspector"], [4, "id1"]], "csvcubed.utils.sparql_handler.column_component_info module": [[4, "module-csvcubed.utils.sparql_handler.column_component_info"]], "ColumnComponentInfo": [[4, "columncomponentinfo"]], "csvcubed.utils.sparql_handler.csvw_inspector module": [[4, "module-csvcubed.utils.sparql_handler.csvw_inspector"]], "csvcubed.utils.sparql_handler.data_cube_inspector module": [[4, "module-csvcubed.utils.sparql_handler.data_cube_inspector"]], "Data Cube Inspector": [[4, "data-cube-inspector"]], "csvcubed.utils.sparql_handler.sparql module": [[4, "module-csvcubed.utils.sparql_handler.sparql"]], "SPARQL": [[4, "sparql"]], "csvcubed.utils.sparql_handler.sparqlquerymanager module": [[4, "module-csvcubed.utils.sparql_handler.sparqlquerymanager"]], "SPARQL Queries": [[4, "sparql-queries"]], "Welcome to csvcubed\u2019s documentation!": [[5, "welcome-to-csvcubed-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "csvcubed": [[6, "csvcubed"]]}, "indexentries": {"csvcubed": [[0, "module-csvcubed"]], "csvcubed.definitions": [[0, "module-csvcubed.definitions"]], "csvcubed.inputs": [[0, "module-csvcubed.inputs"]], "module": [[0, "module-csvcubed"], [0, "module-csvcubed.definitions"], [0, "module-csvcubed.inputs"], [1, "module-csvcubed.cli"], [1, "module-csvcubed.cli.entrypoint"], [1, "module-csvcubed.cli.error_mapping"], [2, "module-csvcubed.cli.inspectcsvw"], [2, "module-csvcubed.cli.inspectcsvw.inspect"], [2, "module-csvcubed.cli.inspectcsvw.inspectdatasetmanager"], [2, "module-csvcubed.cli.inspectcsvw.metadatainputvalidator"], [2, "module-csvcubed.cli.inspectcsvw.metadataprinter"], [3, "module-csvcubed.utils"], [3, "module-csvcubed.utils.cache"], [3, "module-csvcubed.utils.cli"], [3, "module-csvcubed.utils.createlocalcopyresponse"], [3, "module-csvcubed.utils.csvdataset"], [3, "module-csvcubed.utils.csvw"], [3, "module-csvcubed.utils.datetime"], [3, "module-csvcubed.utils.dict"], [3, "module-csvcubed.utils.file"], [3, "module-csvcubed.utils.iterables"], [3, "module-csvcubed.utils.json"], [3, "module-csvcubed.utils.log"], [3, "module-csvcubed.utils.pandas"], [3, "module-csvcubed.utils.printable"], [3, "module-csvcubed.utils.rdf"], [3, "module-csvcubed.utils.tableschema"], [3, "module-csvcubed.utils.text"], [3, "module-csvcubed.utils.uri"], [3, "module-csvcubed.utils.validations"], [3, "module-csvcubed.utils.version"], [4, "module-csvcubed.utils.sparql_handler"], [4, "module-csvcubed.utils.sparql_handler.code_list_inspector"], [4, "module-csvcubed.utils.sparql_handler.column_component_info"], [4, "module-csvcubed.utils.sparql_handler.csvw_inspector"], [4, "module-csvcubed.utils.sparql_handler.data_cube_inspector"], [4, "module-csvcubed.utils.sparql_handler.sparql"], [4, "module-csvcubed.utils.sparql_handler.sparqlquerymanager"]], "pandas_input_to_columnar() (in module csvcubed.inputs)": [[0, "csvcubed.inputs.pandas_input_to_columnar"]], "pandas_input_to_columnar_list() (in module csvcubed.inputs)": [[0, "csvcubed.inputs.pandas_input_to_columnar_list"]], "pandas_input_to_columnar_optional_str() (in module csvcubed.inputs)": [[0, "csvcubed.inputs.pandas_input_to_columnar_optional_str"]], "pandas_input_to_columnar_str() (in module csvcubed.inputs)": [[0, "csvcubed.inputs.pandas_input_to_columnar_str"]], "csvcubed.cli": [[1, "module-csvcubed.cli"]], "csvcubed.cli.entrypoint": [[1, "module-csvcubed.cli.entrypoint"]], "csvcubed.cli.error_mapping": [[1, "module-csvcubed.cli.error_mapping"]], "friendly_error_mapping() (in module csvcubed.cli.error_mapping)": [[1, "csvcubed.cli.error_mapping.friendly_error_mapping"]], "metadataprinter (class in csvcubed.cli.inspectcsvw.metadataprinter)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter"]], "metadatavalidator (class in csvcubed.cli.inspectcsvw.metadatainputvalidator)": [[2, "csvcubed.cli.inspectcsvw.metadatainputvalidator.MetadataValidator"]], "catalog_metadata_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.catalog_metadata_printable"]], "codelist_hierachy_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.codelist_hierachy_info_printable"]], "codelist_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.codelist_info_printable"]], "column_component_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.column_component_info_printable"]], "csvcubed.cli.inspectcsvw": [[2, "module-csvcubed.cli.inspectcsvw"]], "csvcubed.cli.inspectcsvw.inspect": [[2, "module-csvcubed.cli.inspectcsvw.inspect"]], "csvcubed.cli.inspectcsvw.inspectdatasetmanager": [[2, "module-csvcubed.cli.inspectcsvw.inspectdatasetmanager"]], "csvcubed.cli.inspectcsvw.metadatainputvalidator": [[2, "module-csvcubed.cli.inspectcsvw.metadatainputvalidator"]], "csvcubed.cli.inspectcsvw.metadataprinter": [[2, "module-csvcubed.cli.inspectcsvw.metadataprinter"]], "csvw_metadata_json_path (csvcubed.cli.inspectcsvw.metadatainputvalidator.metadatavalidator attribute)": [[2, "csvcubed.cli.inspectcsvw.metadatainputvalidator.MetadataValidator.csvw_metadata_json_path"]], "csvw_metadata_rdf_graph (csvcubed.cli.inspectcsvw.metadatainputvalidator.metadatavalidator attribute)": [[2, "csvcubed.cli.inspectcsvw.metadatainputvalidator.MetadataValidator.csvw_metadata_rdf_graph"]], "csvw_type_str (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.csvw_type_str"]], "dataset (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.dataset"]], "dataset_observations_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.dataset_observations_info_printable"]], "dataset_val_counts_by_measure_unit_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.dataset_val_counts_by_measure_unit_info_printable"]], "detect_csvw_type() (csvcubed.cli.inspectcsvw.metadatainputvalidator.metadatavalidator method)": [[2, "csvcubed.cli.inspectcsvw.metadatainputvalidator.MetadataValidator.detect_csvw_type"]], "generate_codelist_results() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.generate_codelist_results"]], "generate_general_results() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.generate_general_results"]], "get_concepts_hierarchy_info() (in module csvcubed.cli.inspectcsvw.inspectdatasetmanager)": [[2, "csvcubed.cli.inspectcsvw.inspectdatasetmanager.get_concepts_hierarchy_info"]], "get_csvw_type_str() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter static method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.get_csvw_type_str"]], "get_datacube_results() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.get_datacube_results"]], "get_dataset_observations_info() (in module csvcubed.cli.inspectcsvw.inspectdatasetmanager)": [[2, "csvcubed.cli.inspectcsvw.inspectdatasetmanager.get_dataset_observations_info"]], "get_dataset_val_counts_info() (in module csvcubed.cli.inspectcsvw.inspectdatasetmanager)": [[2, "csvcubed.cli.inspectcsvw.inspectdatasetmanager.get_dataset_val_counts_info"]], "get_parent_label_unique_id_col_titles() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter static method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.get_parent_label_unique_id_col_titles"]], "get_primary_csv_url() (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter method)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.get_primary_csv_url"]], "inspect() (in module csvcubed.cli.inspectcsvw.inspect)": [[2, "csvcubed.cli.inspectcsvw.inspect.inspect"]], "load_csv_to_dataframe() (in module csvcubed.cli.inspectcsvw.inspectdatasetmanager)": [[2, "csvcubed.cli.inspectcsvw.inspectdatasetmanager.load_csv_to_dataframe"]], "primary_csv_column_definitions (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.primary_csv_column_definitions"]], "primary_csv_url (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.primary_csv_url"]], "primary_cube_table_identifiers (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.primary_cube_table_identifiers"]], "result_catalog_metadata (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_catalog_metadata"]], "result_code_list_cols (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_code_list_cols"]], "result_column_component_infos (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_column_component_infos"]], "result_concepts_hierachy_info (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_concepts_hierachy_info"]], "result_dataset_observations_info (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_dataset_observations_info"]], "result_dataset_value_counts (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_dataset_value_counts"]], "result_primary_csv_code_lists (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.result_primary_csv_code_lists"]], "state (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter attribute)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.state"]], "type_info_printable (csvcubed.cli.inspectcsvw.metadataprinter.metadataprinter property)": [[2, "csvcubed.cli.inspectcsvw.metadataprinter.MetadataPrinter.type_info_printable"]], "adaptertoservelocalfilewhenhttprequestfails (class in csvcubed.utils.createlocalcopyresponse)": [[3, "csvcubed.utils.createlocalcopyresponse.AdapterToServeLocalFileWhenHTTPRequestFails"]], "csvwrdfmanager (class in csvcubed.utils.tableschema)": [[3, "csvcubed.utils.tableschema.CsvWRdfManager"]], "customformatter (class in csvcubed.utils.log)": [[3, "csvcubed.utils.log.CustomFormatter"]], "formats (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.FORMATS"]], "add_triples_for_file_dependencies() (in module csvcubed.utils.tableschema)": [[3, "csvcubed.utils.tableschema.add_triples_for_file_dependencies"]], "all_of() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.all_of"]], "any_of() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.any_of"]], "bold_red (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.bold_red"]], "boolean() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.boolean"]], "close() (csvcubed.utils.createlocalcopyresponse.adaptertoservelocalfilewhenhttprequestfails method)": [[3, "csvcubed.utils.createlocalcopyresponse.AdapterToServeLocalFileWhenHTTPRequestFails.close"]], "code_list_config_json_exists() (in module csvcubed.utils.file)": [[3, "csvcubed.utils.file.code_list_config_json_exists"]], "copy_files_to_directory_with_structure() (in module csvcubed.utils.file)": [[3, "csvcubed.utils.file.copy_files_to_directory_with_structure"]], "csvcubed.utils": [[3, "module-csvcubed.utils"]], "csvcubed.utils.cache": [[3, "module-csvcubed.utils.cache"]], "csvcubed.utils.cli": [[3, "module-csvcubed.utils.cli"]], "csvcubed.utils.createlocalcopyresponse": [[3, "module-csvcubed.utils.createlocalcopyresponse"]], "csvcubed.utils.csvdataset": [[3, "module-csvcubed.utils.csvdataset"]], "csvcubed.utils.csvw": [[3, "module-csvcubed.utils.csvw"]], "csvcubed.utils.datetime": [[3, "module-csvcubed.utils.datetime"]], "csvcubed.utils.dict": [[3, "module-csvcubed.utils.dict"]], "csvcubed.utils.file": [[3, "module-csvcubed.utils.file"]], "csvcubed.utils.iterables": [[3, "module-csvcubed.utils.iterables"]], "csvcubed.utils.json": [[3, "module-csvcubed.utils.json"]], "csvcubed.utils.log": [[3, "module-csvcubed.utils.log"]], "csvcubed.utils.pandas": [[3, "module-csvcubed.utils.pandas"]], "csvcubed.utils.printable": [[3, "module-csvcubed.utils.printable"]], "csvcubed.utils.rdf": [[3, "module-csvcubed.utils.rdf"]], "csvcubed.utils.tableschema": [[3, "module-csvcubed.utils.tableschema"]], "csvcubed.utils.text": [[3, "module-csvcubed.utils.text"]], "csvcubed.utils.uri": [[3, "module-csvcubed.utils.uri"]], "csvcubed.utils.validations": [[3, "module-csvcubed.utils.validations"]], "csvcubed.utils.version": [[3, "module-csvcubed.utils.version"]], "csvw_column_name_safe() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.csvw_column_name_safe"]], "csvw_inspector (csvcubed.utils.tableschema.csvwrdfmanager property)": [[3, "csvcubed.utils.tableschema.CsvWRdfManager.csvw_inspector"]], "csvw_metadata_file_path (csvcubed.utils.tableschema.csvwrdfmanager attribute)": [[3, "csvcubed.utils.tableschema.CsvWRdfManager.csvw_metadata_file_path"]], "data_type() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.data_type"]], "debug_log_exception() (in module csvcubed.utils.log)": [[3, "csvcubed.utils.log.debug_log_exception"]], "ensure_looks_like_uri() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.ensure_looks_like_uri"]], "ensure_values_in_lists_looks_like_uris() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.ensure_values_in_lists_looks_like_uris"]], "enum() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.enum"]], "file() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.file"]], "file_uri_to_path() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.file_uri_to_path"]], "filter_components_from_dsd() (in module csvcubed.utils.csvdataset)": [[3, "csvcubed.utils.csvdataset.filter_components_from_dsd"]], "first() (in module csvcubed.utils.iterables)": [[3, "csvcubed.utils.iterables.first"]], "float() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.float"]], "format() (csvcubed.utils.log.customformatter method)": [[3, "csvcubed.utils.log.CustomFormatter.format"]], "formatting (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.formatting"]], "get_csvcubed_version_uri() (in module csvcubed.utils.version)": [[3, "csvcubed.utils.version.get_csvcubed_version_uri"]], "get_data_type_uri_from_str() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.get_data_type_uri_from_str"]], "get_dependent_local_files() (in module csvcubed.utils.csvw)": [[3, "csvcubed.utils.csvw.get_dependent_local_files"]], "get_from_dict_ensure_exists() (in module csvcubed.utils.dict)": [[3, "csvcubed.utils.dict.get_from_dict_ensure_exists"]], "get_last_uri_part() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.get_last_uri_part"]], "get_printable_list_str() (in module csvcubed.utils.printable)": [[3, "csvcubed.utils.printable.get_printable_list_str"]], "get_printable_tabular_str_from_list() (in module csvcubed.utils.printable)": [[3, "csvcubed.utils.printable.get_printable_tabular_str_from_list"]], "get_root_dir_level() (in module csvcubed.utils.file)": [[3, "csvcubed.utils.file.get_root_dir_level"]], "get_single_measure_from_dsd() (in module csvcubed.utils.csvdataset)": [[3, "csvcubed.utils.csvdataset.get_single_measure_from_dsd"]], "get_standard_shape_measure_col_name_from_dsd() (in module csvcubed.utils.csvdataset)": [[3, "csvcubed.utils.csvdataset.get_standard_shape_measure_col_name_from_dsd"]], "get_standard_shape_unit_col_name_from_dsd() (in module csvcubed.utils.csvdataset)": [[3, "csvcubed.utils.csvdataset.get_standard_shape_unit_col_name_from_dsd"]], "get_with_func_or_none() (in module csvcubed.utils.dict)": [[3, "csvcubed.utils.dict.get_with_func_or_none"]], "grey (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.grey"]], "group_by() (in module csvcubed.utils.iterables)": [[3, "csvcubed.utils.iterables.group_by"]], "http_adapter (csvcubed.utils.createlocalcopyresponse.adaptertoservelocalfilewhenhttprequestfails attribute)": [[3, "csvcubed.utils.createlocalcopyresponse.AdapterToServeLocalFileWhenHTTPRequestFails.http_adapter"]], "integer() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.integer"]], "is_instance_of() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.is_instance_of"]], "light_grey (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.light_grey"]], "list() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.list"]], "load_json_document() (in module csvcubed.utils.json)": [[3, "csvcubed.utils.json.load_json_document"]], "load_table_schema_file_to_graph() (in module csvcubed.utils.csvw)": [[3, "csvcubed.utils.csvw.load_table_schema_file_to_graph"]], "log_exception() (in module csvcubed.utils.log)": [[3, "csvcubed.utils.log.log_exception"]], "log_validation_and_json_schema_errors() (in module csvcubed.utils.cli)": [[3, "csvcubed.utils.cli.log_validation_and_json_schema_errors"]], "looks_like_uri() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.looks_like_uri"]], "optional() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.optional"]], "parse_graph_retain_relative() (in module csvcubed.utils.rdf)": [[3, "csvcubed.utils.rdf.parse_graph_retain_relative"]], "parse_iso_8601_date_time() (in module csvcubed.utils.datetime)": [[3, "csvcubed.utils.datetime.parse_iso_8601_date_time"]], "rdf_graph (csvcubed.utils.tableschema.csvwrdfmanager attribute)": [[3, "csvcubed.utils.tableschema.CsvWRdfManager.rdf_graph"]], "rdf_resource_to_json_ld() (in module csvcubed.utils.dict)": [[3, "csvcubed.utils.dict.rdf_resource_to_json_ld"]], "read_csv() (in module csvcubed.utils.pandas)": [[3, "csvcubed.utils.pandas.read_csv"]], "red (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.red"]], "reset (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.reset"]], "resolve_path() (in module csvcubed.utils.json)": [[3, "csvcubed.utils.json.resolve_path"]], "send() (csvcubed.utils.createlocalcopyresponse.adaptertoservelocalfilewhenhttprequestfails method)": [[3, "csvcubed.utils.createlocalcopyresponse.AdapterToServeLocalFileWhenHTTPRequestFails.send"]], "serialize_sets() (in module csvcubed.utils.json)": [[3, "csvcubed.utils.json.serialize_sets"]], "single() (in module csvcubed.utils.iterables)": [[3, "csvcubed.utils.iterables.single"]], "start_logging() (in module csvcubed.utils.log)": [[3, "csvcubed.utils.log.start_logging"]], "string() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.string"]], "to_json_path() (in module csvcubed.utils.json)": [[3, "csvcubed.utils.json.to_json_path"]], "transform_dataset_to_canonical_shape() (in module csvcubed.utils.csvdataset)": [[3, "csvcubed.utils.csvdataset.transform_dataset_to_canonical_shape"]], "truncate() (in module csvcubed.utils.text)": [[3, "csvcubed.utils.text.truncate"]], "uri() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.uri"]], "uri_safe() (in module csvcubed.utils.uri)": [[3, "csvcubed.utils.uri.uri_safe"]], "validated_model() (in module csvcubed.utils.validations)": [[3, "csvcubed.utils.validations.validated_model"]], "yellow (csvcubed.utils.log.customformatter attribute)": [[3, "csvcubed.utils.log.CustomFormatter.yellow"]], "ask_is_codelist (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.ASK_IS_CODELIST"]], "ask_is_qb_dataset (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.ASK_IS_QB_DATASET"]], "codelistinspector (class in csvcubed.utils.sparql_handler.code_list_inspector)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector"]], "columncomponentinfo (class in csvcubed.utils.sparql_handler.column_component_info)": [[4, "csvcubed.utils.sparql_handler.column_component_info.ColumnComponentInfo"]], "csvwinspector (class in csvcubed.utils.sparql_handler.csvw_inspector)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector"]], "datacubeinspector (class in csvcubed.utils.sparql_handler.data_cube_inspector)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector"]], "select_catalog_metadata (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_CATALOG_METADATA"]], "select_codelists_and_cols (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_CODELISTS_AND_COLS"]], "select_codelist_cols_by_csv_url (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_CODELIST_COLS_BY_CSV_URL"]], "select_codelist_primary_key_by_csv_url (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_CODELIST_PRIMARY_KEY_BY_CSV_URL"]], "select_column_definitions (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_COLUMN_DEFINITIONS"]], "select_csvw_table_schema_file_dependencies (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_CSVW_TABLE_SCHEMA_FILE_DEPENDENCIES"]], "select_data_set_dsd_csv_url (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_DATA_SET_DSD_CSV_URL"]], "select_dsd_qube_components (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_DSD_QUBE_COMPONENTS"]], "select_is_pivoted_shape_for_measures_in_data_set (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_IS_PIVOTED_SHAPE_FOR_MEASURES_IN_DATA_SET"]], "select_labels_for_resource_uris (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_LABELS_FOR_RESOURCE_URIS"]], "select_metadata_dependencies (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_METADATA_DEPENDENCIES"]], "select_table_schema_properties (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_TABLE_SCHEMA_PROPERTIES"]], "select_units (csvcubed.utils.sparql_handler.sparqlquerymanager.sparqlqueryname attribute)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName.SELECT_UNITS"]], "sparqlqueryname (class in csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.SPARQLQueryName"]], "ask() (in module csvcubed.utils.sparql_handler.sparql)": [[4, "csvcubed.utils.sparql_handler.sparql.ask"]], "ask_is_csvw_code_list() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.ask_is_csvw_code_list"]], "ask_is_csvw_qb_dataset() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.ask_is_csvw_qb_dataset"]], "catalog_metadata (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector property)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.catalog_metadata"]], "code_list_inspector_in (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector attribute)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.code_list_inspector_in"]], "column_definition (csvcubed.utils.sparql_handler.column_component_info.columncomponentinfo attribute)": [[4, "csvcubed.utils.sparql_handler.column_component_info.ColumnComponentInfo.column_definition"]], "column_definitions (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector property)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.column_definitions"]], "column_type (csvcubed.utils.sparql_handler.column_component_info.columncomponentinfo attribute)": [[4, "csvcubed.utils.sparql_handler.column_component_info.ColumnComponentInfo.column_type"]], "component (csvcubed.utils.sparql_handler.column_component_info.columncomponentinfo attribute)": [[4, "csvcubed.utils.sparql_handler.column_component_info.ColumnComponentInfo.component"]], "csvcubed.utils.sparql_handler": [[4, "module-csvcubed.utils.sparql_handler"]], "csvcubed.utils.sparql_handler.code_list_inspector": [[4, "module-csvcubed.utils.sparql_handler.code_list_inspector"]], "csvcubed.utils.sparql_handler.column_component_info": [[4, "module-csvcubed.utils.sparql_handler.column_component_info"]], "csvcubed.utils.sparql_handler.csvw_inspector": [[4, "module-csvcubed.utils.sparql_handler.csvw_inspector"]], "csvcubed.utils.sparql_handler.data_cube_inspector": [[4, "module-csvcubed.utils.sparql_handler.data_cube_inspector"]], "csvcubed.utils.sparql_handler.sparql": [[4, "module-csvcubed.utils.sparql_handler.sparql"]], "csvcubed.utils.sparql_handler.sparqlquerymanager": [[4, "module-csvcubed.utils.sparql_handler.sparqlquerymanager"]], "csvw_inspector (csvcubed.utils.sparql_handler.code_list_inspector.codelistinspector attribute)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector.csvw_inspector"]], "csvw_inspector (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector attribute)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.csvw_inspector"]], "csvw_json_path (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector attribute)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.csvw_json_path"]], "csvw_type (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector property)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.csvw_type"]], "get_attribute_value_uris_and_labels() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_attribute_value_uris_and_labels"]], "get_catalog_metadata_for_concept_scheme() (csvcubed.utils.sparql_handler.code_list_inspector.codelistinspector method)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector.get_catalog_metadata_for_concept_scheme"]], "get_code_lists_and_cols() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_code_lists_and_cols"]], "get_column_component_info() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_column_component_info"]], "get_column_definitions_for_csv() (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector method)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.get_column_definitions_for_csv"]], "get_columns_of_type() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_columns_of_type"]], "get_cube_identifiers_for_csv() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_cube_identifiers_for_csv"]], "get_cube_identifiers_for_data_set() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_cube_identifiers_for_data_set"]], "get_dataframe() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_dataframe"]], "get_dsd_qube_components_for_csv() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_dsd_qube_components_for_csv"]], "get_map_code_list_uri_to_label() (csvcubed.utils.sparql_handler.code_list_inspector.codelistinspector method)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector.get_map_code_list_uri_to_label"]], "get_measure_uris_and_labels() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_measure_uris_and_labels"]], "get_primary_catalog_metadata() (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector method)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.get_primary_catalog_metadata"]], "get_primary_csv_url() (csvcubed.utils.sparql_handler.code_list_inspector.codelistinspector method)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector.get_primary_csv_url"]], "get_primary_csv_url() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_primary_csv_url"]], "get_shape_for_csv() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_shape_for_csv"]], "get_table_identifiers_for_concept_scheme() (csvcubed.utils.sparql_handler.code_list_inspector.codelistinspector method)": [[4, "csvcubed.utils.sparql_handler.code_list_inspector.CodeListInspector.get_table_identifiers_for_concept_scheme"]], "get_table_info_for_csv_url() (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector method)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.get_table_info_for_csv_url"]], "get_unit_for_uri() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_unit_for_uri"]], "get_units() (csvcubed.utils.sparql_handler.data_cube_inspector.datacubeinspector method)": [[4, "csvcubed.utils.sparql_handler.data_cube_inspector.DataCubeInspector.get_units"]], "none_or_map() (in module csvcubed.utils.sparql_handler.sparql)": [[4, "csvcubed.utils.sparql_handler.sparql.none_or_map"]], "path_to_file_uri_for_rdflib() (in module csvcubed.utils.sparql_handler.sparql)": [[4, "csvcubed.utils.sparql_handler.sparql.path_to_file_uri_for_rdflib"]], "primary_graph_uri (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector attribute)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.primary_graph_uri"]], "rdf_graph (csvcubed.utils.sparql_handler.csvw_inspector.csvwinspector attribute)": [[4, "csvcubed.utils.sparql_handler.csvw_inspector.CsvWInspector.rdf_graph"]], "select() (in module csvcubed.utils.sparql_handler.sparql)": [[4, "csvcubed.utils.sparql_handler.sparql.select"]], "select_column_definitions() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_column_definitions"]], "select_csvw_catalog_metadata() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_csvw_catalog_metadata"]], "select_csvw_dsd_qube_components() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_csvw_dsd_qube_components"]], "select_csvw_table_schema_file_dependencies() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_csvw_table_schema_file_dependencies"]], "select_data_set_dsd_and_csv_url() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_data_set_dsd_and_csv_url"]], "select_dsd_code_list_and_cols() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_dsd_code_list_and_cols"]], "select_is_pivoted_shape_for_measures_in_data_set() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_is_pivoted_shape_for_measures_in_data_set"]], "select_labels_for_resource_uris() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_labels_for_resource_uris"]], "select_metadata_dependencies() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_metadata_dependencies"]], "select_primary_key_col_names_by_csv_url() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_primary_key_col_names_by_csv_url"]], "select_table_schema_properties() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_table_schema_properties"]], "select_units() (in module csvcubed.utils.sparql_handler.sparqlquerymanager)": [[4, "csvcubed.utils.sparql_handler.sparqlquerymanager.select_units"]]}})